const express = require('express');
const db = require('../data/dbConfig');
const router = express.Router();

router.get('/', (req, res) => {
	db.select('*')
		.from('accounts')
		.then(accounts => {
			res.status(200).json(accounts);
		})
		.catch(error => {
			console.log(error);
			res.status(500).json({error: 'failed to get accounts'});
		});
});

router.post('/', validatePost, (req, res) => {
	db('accounts')
		.insert(req.body)
		.then(id => {
			res.status(201).json({message: 'account created'});
		})
		.catch(err => {
			res.status(500).json({message: 'post failed'});
		});
});

router.put('/:id', validatePost, (req, res) => {
	db('accounts')
		.where({id: req.params.id})
		.update({name: req.body.name, budget: req.body.budget})
		.then(accounts => {
			res.status(200).json(accounts);
		})
		.catch(() => {
			res.status(500).json({error: 'failed to update account'});
		});
});

router.delete('/:id', (req, res) => {
	db('accounts')
		.where({id: req.params.id})
		.del()
		.then(account => {
			res.status(200).json({message: 'Account was Deleted'});
		})
		.catch(error =>
			res.status(500).json({message: 'failed to delete account'})
		);
});

module.exports = router;
// | field  | data type        | metadata                                            |
// | ------ | ---------------- | --------------------------------------------------- |
// | id     | unsigned integer | primary key, auto-increments, generated by database |
// | name   | string           | required, unique                                    |
// | budget | numeric          | required                                            |

function validatePost(req, res, next) {
	!req.body.name
		? res.status(400).json({error: 'Please include name'})
		: !req.body.budget
		? res.status(400).json({error: 'Please include budget'})
		: next();
}
